# This is an enhanced version of the test workflow that creates a dynamic badge
# showing test counts. To use this:
# 1. Create a GitHub Gist 
# 2. Add the gist ID to your repository secrets as GIST_ID
# 3. Rename this file to test.yml (replacing the simpler version)

name: Tests with Count Badge

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Install dependencies
      run: |
        uv sync
        
    - name: Run tests with pytest
      id: pytest
      run: |
        uv run pytest tests/ --verbose --tb=short --junit-xml=pytest.xml | tee pytest_output.txt
        
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          pytest.xml
        comment_mode: create new
        
    - name: Generate test summary
      if: always()
      run: |
        if [ -f pytest.xml ]; then
          # Extract test counts from pytest XML
          TESTS=$(grep -o 'tests="[0-9]*"' pytest.xml | head -1 | sed 's/tests="\([0-9]*\)"/\1/')
          FAILURES=$(grep -o 'failures="[0-9]*"' pytest.xml | head -1 | sed 's/failures="\([0-9]*\)"/\1/')
          ERRORS=$(grep -o 'errors="[0-9]*"' pytest.xml | head -1 | sed 's/errors="\([0-9]*\)"/\1/')
          
          # Default to 0 if not found
          TESTS=${TESTS:-0}
          FAILURES=${FAILURES:-0}
          ERRORS=${ERRORS:-0}
          
          PASSED=$((TESTS - FAILURES - ERRORS))
          
          echo "TOTAL_TESTS=$TESTS" >> $GITHUB_ENV
          echo "PASSED_TESTS=$PASSED" >> $GITHUB_ENV
          echo "FAILED_TESTS=$((FAILURES + ERRORS))" >> $GITHUB_ENV
          
          if [ $((FAILURES + ERRORS)) -eq 0 ]; then
            echo "TEST_STATUS=✅ $PASSED/$TESTS passing" >> $GITHUB_ENV
            echo "TEST_COLOR=brightgreen" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=❌ $PASSED/$TESTS passing" >> $GITHUB_ENV
            echo "TEST_COLOR=red" >> $GITHUB_ENV
          fi
        else
          echo "TOTAL_TESTS=0" >> $GITHUB_ENV
          echo "PASSED_TESTS=0" >> $GITHUB_ENV
          echo "FAILED_TESTS=0" >> $GITHUB_ENV
          echo "TEST_STATUS=⚪ no tests" >> $GITHUB_ENV
          echo "TEST_COLOR=lightgrey" >> $GITHUB_ENV
        fi
        
    - name: Create test count badge
      if: always()
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GITHUB_TOKEN }}
        gistID: ${{ secrets.GIST_ID }}
        filename: test-badge.json
        label: tests
        message: ${{ env.TEST_STATUS }}
        color: ${{ env.TEST_COLOR }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          pytest.xml
          pytest_output.txt 